package mirimstore;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.lang.reflect.Modifier;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;

import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import recommend.recommend;

class MenuFrameC extends JFrame implements ActionListener {
	public JButton  menub, choob, boarb, cartb, snackb, breab, drinkb_c, icecb, candb, etccb, 토레타
	,두유,식혜,헬로파, 헬로분, 결명자, 옥수수, 바나나, left, right;
	protected JLabel label, result, page;
	GridBagConstraints cc;private Font f1 = new Font("나눔고딕", Font.PLAIN, 20);
	public MenuFrameC()
	  {
		super("미림매점");
		Container c = this.getContentPane();
	    c.setBackground(Color.WHITE);
	     
	    menub = new JButton(new ImageIcon("img/m-02.png"));
		   choob = new JButton(new ImageIcon("img/m-03.png"));
		   boarb = new JButton(new ImageIcon("img/m-05.png"));
		   cartb = new JButton(new ImageIcon("img/m-07.png"));
	   
	   snackb = new JButton(new ImageIcon("img/menu-01.png"));	
	   breab = new JButton(new ImageIcon("img/menu-02.png"));
	   drinkb_c = new JButton(new ImageIcon("img/store-06.png"));
	   icecb = new JButton(new ImageIcon("img/menu-05.png"));	
	   candb = new JButton(new ImageIcon("img/menu-03.png"));
	   etccb = new JButton(new ImageIcon("img/menu-06.png"));
	
	   토레타 = new JButton(new ImageIcon("img/u-01.png"));
	   두유 = new JButton(new ImageIcon("img/u-02.png"));
	   식혜 = new JButton(new ImageIcon("img/u-03.png"));
	   헬로파 = new JButton(new ImageIcon("img/u-04.png"));
	   헬로분 = new JButton(new ImageIcon("img/u-05.png"));
	   결명자 = new JButton(new ImageIcon("img/u-06.png"));
	   옥수수 = new JButton(new ImageIcon("img/u-07.png"));
	   바나나 = new JButton(new ImageIcon("img/u-08.png"));
	   left = new JButton(new ImageIcon("img/a-50.png"));
	   page = new JLabel("1/4");page.setFont(f1);
	   right = new JButton(new ImageIcon("img/a-49.png"));
	   //이벤트 등록
	   토레타.addActionListener(this);
	   두유.addActionListener(this);
	   식혜.addActionListener(this);
	   헬로파.addActionListener(this);
	   헬로분.addActionListener(this);
	   결명자.addActionListener(this);
	   옥수수.addActionListener(this);
	   바나나.addActionListener(this);
	  
	   menub.setBackground(Color.WHITE);
	   choob.setBackground(Color.WHITE);
	   boarb.setBackground(Color.WHITE);
	   cartb.setBackground(Color.WHITE);
	   snackb.setBackground(Color.WHITE);
	   breab.setBackground(Color.WHITE);
	   drinkb_c.setBackground(Color.WHITE);
	   icecb.setBackground(Color.WHITE);
	   candb.setBackground(Color.WHITE);
	   etccb.setBackground(Color.WHITE);
	   left.setBorderPainted(false);
	   left.setOpaque(false);
	   left.setContentAreaFilled(false);
	   right.setBorderPainted(false);
	   right.setOpaque(false);
	   right.setContentAreaFilled(false);
	   토레타.setBorderPainted(false);
	   토레타.setOpaque(false);
	   토레타.setContentAreaFilled(false);
	   두유.setBorderPainted(false);
	   두유.setOpaque(false);
	   두유.setContentAreaFilled(false);
	   식혜.setBorderPainted(false);
	   식혜.setOpaque(false);
	   식혜.setContentAreaFilled(false);
	   헬로파.setBorderPainted(false);
	   헬로파.setOpaque(false);
	   헬로파.setContentAreaFilled(false);
	   헬로분.setBorderPainted(false);
	   헬로분.setOpaque(false);
	   헬로분.setContentAreaFilled(false);
	   결명자.setBorderPainted(false);
	   결명자.setOpaque(false);
	   결명자.setContentAreaFilled(false);
	   옥수수.setBorderPainted(false);
	   옥수수.setOpaque(false);
	   옥수수.setContentAreaFilled(false);
	   바나나.setBorderPainted(false);
	   바나나.setOpaque(false);
	   바나나.setContentAreaFilled(false);
	   
	   
	   menub.setBorderPainted(false);
	   choob.setBorderPainted(false);
	   boarb.setBorderPainted(false);
	   cartb.setBorderPainted(false);
	   snackb.setBorderPainted(false);
	   breab.setBorderPainted(false);
	   drinkb_c.setBorderPainted(false);
	   icecb.setBorderPainted(false);
	   candb.setBorderPainted(false);
	   etccb.setBorderPainted(false);
	   
	   menub.setPreferredSize(new Dimension(200, 70));
	   choob.setPreferredSize(new Dimension(200, 70));
	   boarb.setPreferredSize(new Dimension(200, 70));
	   cartb.setPreferredSize(new Dimension(200, 70));
	   snackb.setPreferredSize(new Dimension(200, 70));
	   breab.setPreferredSize(new Dimension(200, 70));
	   drinkb_c.setPreferredSize(new Dimension(200, 70));
	   icecb.setPreferredSize(new Dimension(200,70));
	   candb.setPreferredSize(new Dimension(200,70));
	   etccb.setPreferredSize(new Dimension(200,70));
	   
	   menub.addActionListener(this); choob.addActionListener(this); boarb.addActionListener(this); 
	   cartb.addActionListener(this); snackb.addActionListener(this); breab.addActionListener(this);
	   drinkb_c.addActionListener(this); icecb.addActionListener(this); candb.addActionListener(this);
	   etccb.addActionListener(this); right.addActionListener(this); 
	 //  ImageIcon logo = new ImageIcon("logo.jpg");
	   //label = new JLabel(logo, JLabel.LEFT);// 라벨에 내용, 이미지, 위치 설정
	   result = new JLabel();
       result.setText("Country Name");
       
	   setLayout(null);

	   menub.setBounds(60, 60, 215, 80);
	   choob.setBounds(320, 62, 209, 69);
	   boarb.setBounds(580, 60, 209, 69);
	   cartb.setBounds(840, 60, 209, 69);
	   snackb.setBounds(50, 200, 200, 70);
	   breab.setBounds(50, 300, 200, 70);
	   drinkb_c.setBounds(50, 400, 200,70);
	   icecb.setBounds(50, 500, 200, 70);
	   candb.setBounds(50, 600, 200, 70);
	   etccb.setBounds(50, 700, 200, 70);
	  
	   토레타.setBounds(310, 200,  170, 220);
	   두유.setBounds(510, 200,  170, 220);
	   식혜.setBounds(710, 200,  170, 220);
	   헬로파.setBounds(910, 200,  170, 220);
	   헬로분.setBounds(310, 470,  170, 220);
	   결명자.setBounds(510, 470,  170, 220);
	   옥수수.setBounds(710, 470,  170, 220);
	   바나나.setBounds(910, 470,  170, 220);
	   left.setBounds(580, 720, 40, 40);
	   page.setBounds(640, 714, 50, 50);
	   right.setBounds(710, 720, 40, 40);
	  // JPanel mm = new JPanel();
	   //mm.setLayout(new BoxLayout(mm, BoxLayout.Y_AXIS));
	   //setLayout(new GridLayout()); 
	   //mm.setBackground(Color.WHITE);
	   //getContentPane().add(label);
	   //mm.add(label);
	    c.add(menub); c.add(choob); c.add(boarb); c.add(cartb);
	   c.add(snackb); c.add(breab); c.add(drinkb_c); c.add(icecb); c.add(candb); 
	   c.add(etccb); 
	 
	   c.add(토레타);
	   c.add(두유); c.add(식혜); c.add(헬로파);
	   c.add(헬로분); c.add(결명자); c.add(옥수수); c.add(바나나); c.add(left);
	   c.add(page); c.add(right);
	   
	   setDefaultCloseOperation(EXIT_ON_CLOSE); // 프로그램 종료 
	   setSize(1140, 880);
	   setVisible(true);
	   setResizable(false);
	  }
	
		public void actionPerformed(ActionEvent e){
			 //확인버튼 누르면 프레임이 닫히고 
			if(e.getSource().equals(menub)){
				try{
					dispose();
					MenuFrameA menu = new MenuFrameA();
					menu.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(choob)){
				try{
					dispose();
					RecomFrame re = new RecomFrame();
					re.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(boarb)){
				try{
					dispose();
					BoardFrame boa = new BoardFrame();
					boa.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
		
			if(e.getSource().equals(right)){
				try{
					dispose();
					MenuFrameC2 me = new MenuFrameC2();
					me.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(cartb)){
				try{
					dispose();
					CartFrame car = new CartFrame();
					car.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(snackb)){
				try{
					dispose();
					MenuFrameA ma = new MenuFrameA();
					ma.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(breab)){
				try{
					dispose();
					MenuFrameB mb = new MenuFrameB();
					mb.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(drinkb_c)){
				try{
					dispose();
					MenuFrameC mc = new MenuFrameC();
					mc.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(icecb)){
				try{
					dispose();
					MenuFrameD md = new MenuFrameD();
					md.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(candb)){
				try{
					dispose();
					MenuFrameE me = new MenuFrameE();
					me.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(etccb)){
				try{
					dispose();
					MenuFrameF mf = new MenuFrameF();
					mf.setVisible(true);
				}catch(Exception ee){
					ee.printStackTrace();
				}
			}
			if(e.getSource().equals(토레타))
			{
				try {
					Connection con = null;
	                
	                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
	                java.sql.Statement st = null;
	                ResultSet result = null;
	                st = con.createStatement();
	                st.execute("use menu;"); 
	                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
	                
	                while (result.next()){
	                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
	                   int reply = JOptionPane.showConfirmDialog(this, str);
	                    if(reply == JOptionPane.YES_OPTION){
	                    	 java.sql.Statement st2 = null;
	                         st2 = con.createStatement();
	                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
	                    	st2.execute("insert into cart values('고구마피자파티','1000')");
	                    }
	                }
				} catch (Exception e1) {
					e1.printStackTrace();
				}
			}
			else if (e.getSource().equals(두유))
		{
				try {
					Connection con = null;
	                
	                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
	                java.sql.Statement st = null;
	                ResultSet result = null;
	                st = con.createStatement();
	                st.execute("use menu;"); 
	                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
	                
	                while (result.next()){
	                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
	                   int reply = JOptionPane.showConfirmDialog(this, str);
	                    if(reply == JOptionPane.YES_OPTION){
	                    	 java.sql.Statement st2 = null;
	                         st2 = con.createStatement();
	                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
	                    	st2.execute("insert into cart values('고구마피자파티','1000')");
	                    }
	                }
				} catch (Exception e1) {
					e1.printStackTrace();
				}
		}
		else if(e.getSource().equals(식혜))
		{
			try {
				Connection con = null;
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
                java.sql.Statement st = null;
                ResultSet result = null;
                st = con.createStatement();
                st.execute("use menu;"); 
                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
                
                while (result.next()){
                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
                   int reply = JOptionPane.showConfirmDialog(this, str);
                    if(reply == JOptionPane.YES_OPTION){
                    	 java.sql.Statement st2 = null;
                         st2 = con.createStatement();
                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
                    	st2.execute("insert into cart values('고구마피자파티','1000')");
                    }
                }
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}
		else if(e.getSource().equals(헬로파))
		{
			try {
				Connection con = null;
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
                java.sql.Statement st = null;
                ResultSet result = null;
                st = con.createStatement();
                st.execute("use menu;"); 
                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
                
                while (result.next()){
                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
                   int reply = JOptionPane.showConfirmDialog(this, str);
                    if(reply == JOptionPane.YES_OPTION){
                    	 java.sql.Statement st2 = null;
                         st2 = con.createStatement();
                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
                    	st2.execute("insert into cart values('고구마피자파티','1000')");
                    }
                }
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}
		else if(e.getSource().equals(헬로분))
		{
			try {
				Connection con = null;
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
                java.sql.Statement st = null;
                ResultSet result = null;
                st = con.createStatement();
                st.execute("use menu;"); 
                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
                
                while (result.next()){
                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
                   int reply = JOptionPane.showConfirmDialog(this, str);
                    if(reply == JOptionPane.YES_OPTION){
                    	 java.sql.Statement st2 = null;
                         st2 = con.createStatement();
                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
                    	st2.execute("insert into cart values('고구마피자파티','1000')");
                    }
                }
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}
		else if(e.getSource().equals(결명자))
		{
			try {
				Connection con = null;
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
                java.sql.Statement st = null;
                ResultSet result = null;
                st = con.createStatement();
                st.execute("use menu;"); 
                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
                
                while (result.next()){
                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
                   int reply = JOptionPane.showConfirmDialog(this, str);
                    if(reply == JOptionPane.YES_OPTION){
                    	 java.sql.Statement st2 = null;
                         st2 = con.createStatement();
                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
                    	st2.execute("insert into cart values('고구마피자파티','1000')");
                    }
                }
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}
		else if(e.getSource().equals(옥수수))
		{
			try {
				Connection con = null;
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
                java.sql.Statement st = null;
                ResultSet result = null;
                st = con.createStatement();
                st.execute("use menu;"); 
                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
                
                while (result.next()){
                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
                   int reply = JOptionPane.showConfirmDialog(this, str);
                    if(reply == JOptionPane.YES_OPTION){
                    	 java.sql.Statement st2 = null;
                         st2 = con.createStatement();
                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
                    	st2.execute("insert into cart values('고구마피자파티','1000')");
                    }
                }
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}	
		else if(e.getSource().equals(바나나))
		{
			try {
				Connection con = null;
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/menu?useSSL=false", "root", "mirim");
                java.sql.Statement st = null;
                ResultSet result = null;
                st = con.createStatement();
                st.execute("use menu;"); 
                result = st.executeQuery("select name from allmenu where name = '고구마피자파티';");
                
                while (result.next()){
                    String str = result.getNString(1) + "상품을 주문하시겠습니까?";
                   int reply = JOptionPane.showConfirmDialog(this, str);
                    if(reply == JOptionPane.YES_OPTION){
                    	 java.sql.Statement st2 = null;
                         st2 = con.createStatement();
                    	st2.execute("update allmenu set product=product+1 where name='고구마피자파티';");
                    	st2.execute("insert into cart values('고구마피자파티','1000')");
                    }
                }
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}
		
	}
}
public class MenuC{
	public static void main(String args[]) throws Exception{
		new MenuFrameB();
		
	}

}
